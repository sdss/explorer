[project]
name = "sdss-explorer"
authors = [
    {name = "Riley Thai", email = "rtha0022@student.monash.edu"},
]
license = {file = "LICENSE"}
classifiers = ["Intended Audience :: Developers",  "Programming Language :: Python :: 3.10"]
dynamic = ["version", "description"]
dependencies = [
    "solara>=1.40.0,<=1.42.0",
    "plotly>=5.18.0,<6.0.0",
    "vaex-core >=4.17.0",
    "vaex-hdf5",
    "diskcache>=5.6.3",
    "numpy>=1.26.4,<2.0.0",
    # dependency force because its being annoying
    "xarray",
    "dotenv",
    "gunicorn>=23.0.0",
    "fastapi>=0.115.8",
    "pydantic-settings>=2.8.0",
]
requires-python = ">= 3.10"
readme = "README.md"

[project.optional-dependencies]
dev = [
    "pytest>=7.0",
    "pynvim",
]
docs = [
    "mkdocs",
    "mkdocs-material",
    "mkdocstrings",
    "mkdocstrings-python",
    'mkdocs-gen-files',
    'mkdocs-literate-nav',
    'mkdocs-section-index',
    'griffe-pydantic',
]

[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[tool.hatch.version]
path = "src/sdss_explorer/__init__.py"

[tool.hatch.build.targets.wheel]
packages = ["src/sdss_explorer"]

[tool.black]
line-length = 160

[tool.isort]
profile = "black"

[tool.coverage.report]
exclude_lines = [
  # Have to re-enable the standard pragma
  "pragma: no cover",
  # Don't complain about packages we have installed
  "except ImportError",
  # Don't complain if tests don't hit assertions
  "raise AssertionError",
  "raise NotImplementedError",
  # Don't complain about script hooks
  "def main(.*):",
  # Ignore branches that don't pertain to this version of Python
  "pragma: py{ignore_python_version}",
  # Don't complain about IPython completion helper
  "def _ipython_key_completions_",
]
